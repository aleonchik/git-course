        Visual Studio Code
        https://code.visualstudio.com/

        Смотрим версию

alexey@es15:~/jsrc/git-course$ git --version
git version 2.34.1

        Инициализируем репозиторий

alexey@es15:~/jsrc/git-course$ git init
подсказка: Using 'master' as the name for the initial branch. This default branch name
подсказка: is subject to change. To configure the initial branch name to use in all
подсказка: of your new repositories, which will suppress this warning, call:
подсказка: 
подсказка: 	git config --global init.defaultBranch <name>
подсказка: 
подсказка: Names commonly chosen instead of 'master' are 'main', 'trunk' and
подсказка: 'development'. The just-created branch can be renamed via this command:
подсказка: 
подсказка: 	git branch -m <name>
Инициализирован пустой репозиторий Git в /home/alexey/jsrc/git-course/.git/

        STATUS Посмотрим что происходит??? Перед этим, мы поместили пару
        файлов в каталог проекта

alexey@es15:~/jsrc/git-course$ git status 
На ветке master

Еще нет коммитов

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)
	git.txt
	index.html

ничего не добавлено в коммит, но есть неотслеживаемые файлы (используйте «git add», чтобы отслеживать их)

        Добавляем все файлы
        
alexey@es15:~/jsrc/git-course$ git add .

        Посмотрим СТАТУС

alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html

        Можно убрать из отслеживания файл git.txt так:

alexey@es15:~/jsrc/git-course$ git rm --cached git.txt 
error: следующие файлы содержат проиндексированные изменения отличающиеся и от файла, и от HEAD:
    git.txt
(используйте опцию «-f» для принудительного удаления)

        Посмотрим на СТАТУС
        
alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git restore <файл>…», чтобы отменить изменения в рабочем каталоге)
	изменено:      git.txt

        Добавим файл git.txt обратно в отслеживаемые

alexey@es15:~/jsrc/git-course$ git add git.txt

        Посмотрим на СТАТУС

alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html

        Создал новый файл script.js и немного изменил существующие
        Посмотрим СТАТУС

alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git restore <файл>…», чтобы отменить изменения в рабочем каталоге)
	изменено:      git.txt
	изменено:      index.html

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)
	script.js

        Добавим все файлы и посмотрим статус

alexey@es15:~/jsrc/git-course$ git add .
alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html
	новый файл:    script.js

        Изменим пару файликов (git.txt, index.html) и посмотрим статус

alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html
	новый файл:    script.js

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git restore <файл>…», чтобы отменить изменения в рабочем каталоге)
	изменено:      git.txt
	изменено:      index.html

        Видим, что есть изменения. Добавляем...

alexey@es15:~/jsrc/git-course$ git add .
alexey@es15:~/jsrc/git-course$ git status
На ветке master

Еще нет коммитов

Изменения, которые будут включены в коммит:
  (используйте «git rm --cached <файл>…», чтобы убрать из индекса)
	новый файл:    git.txt
	новый файл:    index.html
	новый файл:    script.js

        Все изменения зафиксированы. Делаем первый "коммит"

alexey@es15:~/jsrc/git-course$ git commit -m "First commit"
[master (корневой коммит) d41013d] First commit
 3 files changed, 211 insertions(+)
 create mode 100644 git.txt
 create mode 100644 index.html
 create mode 100644 script.js

        На этом этапе у нас появился файл errors.err который мы не 
        хотим включать в отслеживаемые. Он не нужен. Это просто файл с ошибками
        нашей системы. Посмотрим статус

alexey@es15:~/jsrc/git-course$ git status 
На ветке master
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	новый файл:    .gitignore
	изменено:      git.txt

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)
	errors.err

        Включаем этот файл в специальный файл игнорирования .gitignore,
        после этого смотрим статус. Сам файл игнора тоже нужно добавить
        в индекс.

alexey@es15:~/jsrc/git-course$ git status 
На ветке master
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	новый файл:    .gitignore
	изменено:      git.txt

        На этом этапе создадим каталог logs/ в котором будут храниться
        логи. Содержимое эттого каталога и сам каталог не нужны в индексе
        Посмотрим статус

alexey@es15:~/jsrc/git-course$ git status 
На ветке master
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	новый файл:    .gitignore
	изменено:      git.txt

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)
	logs/

        Добавим не нужный каталог в .gitignore и посмотрим статус
        Видим, что каталог и его содержимое больше не отслеживается, но
        изменился сам .gitignore Его нужно добавить в индекс обязательно
        И файлик описания в котором это все написано...

alexey@es15:~/jsrc/git-course$ git status 
На ветке master
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	новый файл:    .gitignore
	изменено:      git.txt

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git restore <файл>…», чтобы отменить изменения в рабочем каталоге)
	изменено:      .gitignore
	изменено:      git.txt

alexey@es15:~/jsrc/git-course$ git add .
alexey@es15:~/jsrc/git-course$ git status 
На ветке master
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	новый файл:    .gitignore
	изменено:      git.txt

        Сделаем коммит

alexey@es15:~/jsrc/git-course$ git commit -m "Add .gitignore"
[master ffc8f01] Add .gitignore
 2 files changed, 79 insertions(+)
 create mode 100644 .gitignore

        Посмотрим лог... Видим два коммита

alexey@es15:~/jsrc/git-course$ git log
commit ffc8f0170c2acc2bb8923c2e8053117546434613 (HEAD -> master)
Author: aleonchik <aleonchik@gmail.com>
Date:   Sat Nov 19 11:25:03 2022 +1000

    Add .gitignore

commit d41013ddfa9b9f770bf88207abb20cfa18be1990
Author: aleonchik <aleonchik@gmail.com>
Date:   Sat Nov 19 10:59:41 2022 +1000

    First commit

        Посмотрим на какой ветке мы находимся

alexey@es15:~/jsrc/git-course$ git branch 
* master

        Создадим новую ветку test и посмотрим на ветки вообще, звездочка
        указывает на какой ветке мы находимся

alexey@es15:~/jsrc/git-course$ git branch test
alexey@es15:~/jsrc/git-course$ git branch 
* master
  test

        Теперь удалим ветку test

alexey@es15:~/jsrc/git-course$ git branch -D test 
Ветка test удалена (была ffc8f01).

        Создадим ветку readme

alexey@es15:~/jsrc/git-course$ git branch 
* master
  readme

        Мы все еще находимся на ветке master. Переключимся на ветку
        radme

alexey@es15:~/jsrc/git-course$ git checkout readme 
M	git.txt
Переключено на ветку «readme»
alexey@es15:~/jsrc/git-course$ git branch 
  master
* readme

        Создадим новую ветку new и сразу переключимся на нее

alexey@es15:~/jsrc/git-course$ git checkout -b new
Переключено на новую ветку «new»
alexey@es15:~/jsrc/git-course$ git branch 
  master
* new
  readme

        Переключимся на ветку readme и удалим ветку new

alexey@es15:~/jsrc/git-course$ git checkout readme 
M	git.txt
Переключено на ветку «readme»
alexey@es15:~/jsrc/git-course$ git branch -D new 
Ветка new удалена (была ffc8f01).
alexey@es15:~/jsrc/git-course$ git branch 
  master
* readme

        Находясь в новой ветке (readme) создали файл README.md и смотрим
        статус

alexey@es15:~/jsrc/git-course$ git status 
На ветке readme
Изменения, которые будут включены в коммит:
  (используйте «git restore --staged <файл>…», чтобы убрать из индекса)
	изменено:      git.txt

Изменения, которые не в индексе для коммита:
  (используйте «git add <файл>…», чтобы добавить файл в индекс)
  (используйте «git restore <файл>…», чтобы отменить изменения в рабочем каталоге)
	изменено:      git.txt

Неотслеживаемые файлы:
  (используйте «git add <файл>…», чтобы добавить в то, что будет включено в коммит)
	README.md

